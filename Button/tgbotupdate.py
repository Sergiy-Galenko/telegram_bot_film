import dp as dp
from aiogram.bot import bot
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CommandHandler, CallbackQueryHandler, Updater, MessageHandler
import random

TOKEN = '5845703570:AAFlOF_HbqpJtWfrplzbpBIh0lpmCyucPHo'


DEFAULT_LANG = 'en'

messages = {
    'en': {'hello': 'Hello!', 'change_lang': 'Change language'},
    'uk': {'hello': '–ü—Ä–∏–≤—ñ—Ç!', 'change_lang': '–ó–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É'}
}

#@dp.message_handler(content_types=['text'])
#dp.add_handler(CommandHandler('start', start))

def get_keyboard():
    keyboard = [
        [InlineKeyboardButton("Change language", callback_data='change_lang')]
    ]
    return InlineKeyboardMarkup(keyboard)

def start(update, context):
    pass

def change_lang(update, context):
    update.callback_query.message.edit_text(text=messages[DEFAULT_LANG]['change_lang'], reply_markup=get_language_keyboard())

def select_language(update, context):
    query = update.callback_query
    lang = query.data
    global DEFAULT_LANG
    DEFAULT_LANG = lang–Ü
    query.message.edit_text(text=messages[DEFAULT_LANG]['hello'], reply_markup=get_keyboard())

def get_language_keyboard():
    keyboard = [
        [
            InlineKeyboardButton("üá¨üáß English", callback_data='en'),
            InlineKeyboardButton("üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data='uk')
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def main():
    updater = Updater(TOKEN, use_context=True)
    dispatcher = updater.dispatcher
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CallbackQueryHandler(change_lang, pattern='^change_lang$'))
    dispatcher.add_handler(CallbackQueryHandler(select_language, pattern='^(en|uk)$'))
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()

    def news(update, context):
        news_url = "https://example.com/news"
        message = "–û—Å—Ç–∞–Ω–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–æ—Ç–∞".format(news_url)
        keyboard = [[InlineKeyboardButton("–ß–∏—Ç–∞—Ç–∏", url=news_url)]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        context.bot.send_message(chat_id=update.message.chat_id, text=message, reply_markup=reply_markup)


def find_film(name, year):
    pass

try:

    film = find_film(name='–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞', year='')
except Exception as e:
    bot.send_message(chat_id='–≤–∞—à_chat_id', text='–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {}'.format(str(e)))

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —é–∑–µ—Ä–∞
def count(update, context):
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    subscribers = bot.get_chat_members_count(chat_id=update.effective_chat.id)
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    with open('subscribers.txt', 'a') as file:
        file.write(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {subscribers}\n')

# —Ñ—É–Ω–∫—Ü–∏—è —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def phone_number(update, context):
    # –ø–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    phone_number = update.message.contact.phone_number
    # –ø–æ–ª—É—á–∞—Ç–µ–ª—å –∏–º—è —é–∑–µ—Ä–∞
    username = update.message.contact.first_name
    # —Å—á–µ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
    registr = update.message.contact.registr
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    with open('subscribers.txt', 'a') as file:
        file.write(f'{username}: {phone_number}\n')

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                     level=logging.INFO)

logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
#users = {}


#def start(update, context):
 #   user_id = update.effective_user.id
  #  if user_id not in users:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
   #     users[user_id] = {
    #        'login': update.effective_user.username,
     #       'phone_number': update.effective_user.phone_number,
      #      'count': 1
       # }
    #else:
        # –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ /start, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
     #   users[user_id]['count'] += 1

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ñ–∞–π–ª
    #with open('log.txt', 'a') as file:
     #   file.write(f"Login: {users[user_id]['login']}, Phone number: {users[user_id]['phone_number']}, "
      #             f"Count: {users[user_id]['count']}\n")





